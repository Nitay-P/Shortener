
@model User
@using Microsoft.AspNetCore.Mvc.ModelBinding;
<!DOCTYPE html>
<html>
<head>
	<title>Login Page</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
	<link type="text/css" rel="stylesheet" href="./css/loginpage.css" />
	<style type="text/css">
		.container {
			margin-top: 10%;
		}

		.card {
			border: none;
			box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
		}

		.card-header {
			background-color: #f5f5f5;
			border-bottom: none;
			font-size: 20px;
			font-weight: bold;
			text-align: center;
		}

		.form-control:focus {
			border-color: #007bff;
			box-shadow: none;
		}

		.btn-primary {
			background-color: #007bff;
			border-color: #007bff;
			width: 100%;
		}

			.btn-primary:hover {
				background-color: #0069d9;
				border-color: #0062cc;
			}

	</style>
</head>
<body>
	<div class="container">
		<div class="row justify-content-center">
			<div class="col-md-6">
				<div class="card">
					<div class="card-header">Login</div>
					<div class="card-body">
						<form asp-action="Login" method="post">
							<div class="form-group">
								<label>Email address</label>
								<input asp-for="@Model.Email" type="email" class="form-control" placeholder="Enter email">
								@if (ViewData.ModelState["Email"] != null && ViewData.ModelState["Email"]!.ValidationState != ModelValidationState.Valid)
								{
									<span style="color:red;margin-top:8px; white-space: pre-line;">@ViewData.ModelState["Email"]!.Errors.First().ErrorMessage</span>
								}
							</div>
							<div class="form-group">
								<label>Password</label>
								<input asp-for="@Model.Password" type="password" class="form-control" placeholder="Password">
								@if (ViewData.ModelState["password"] != null && ViewData.ModelState["password"]!.ValidationState != ModelValidationState.Valid && Model.Password == null)
								{
									<span style="color:red;margin-top:8px; white-space: pre-line;">@ViewData.ModelState["Password"]!.Errors.First().ErrorMessage</span>
								}
							</div>
							<button type="submit" class="btn btn-primary">Sign In</button>
							<a target="_blank" href="@ViewBag.Response">
								<svg class="mt-3" xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" viewBox="0 0 16 16">
									<path d="M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z" />
								</svg>
								Sign In with Google
							</a>
						</form>
						@{
							if (ViewData["Message"] != null && !string.IsNullOrEmpty(ViewData["Message"]!.ToString()))
							{
								<div class="bs-popover-bottom" style="border: 1px solid red;">
									<span style="color:red">@ViewData["Message"]</span>
								</div>
							}
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</body>
</html>



			